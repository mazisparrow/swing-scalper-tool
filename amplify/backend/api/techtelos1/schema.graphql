type UserID @model @auth(rules: [{allow: public}]) {
  id: ID!
  email: String!
  Journals: [Journal] @connection(keyName: "byUserID", fields: ["id"])
  Watchlists: [Watchlist] @connection(keyName: "byUserID", fields: ["id"])
}

enum Action {
  OPEN
  CLOSED
}

type Journal @model @auth(rules: [{allow: public}]) @key(name: "byUserID", fields: ["userID"]) {
  id: ID!
  ticker: String!
  quantity: Int!
  buyPrice: Float!
  stopLoss: Float!
  pTarget: [Float!]
  profitLoss: Float
  profitLossPercentage: Float
  tradeRisk: Float
  tradeReward: Float
  tradeStatus: [Action]
  strategy: String
  userID: ID
  sellPrice: Float
  unrealisedPL: Float
  unrealisedPLpercentage: Float
}

type Watchlist @model @key(name: "byUserID", fields: ["userID"]) @auth(rules: [{allow: public, operations: [create, read, delete]}]) {
  id: ID!
  ticker: String!
  buyPrice: Float!
  sma200: Float!
  sma20: Float!
  stopLoss: Float!
  priceTargets: [Float!]
  buyTrigger: Boolean
  buyZone: Boolean
  rsi14: Float!
  userID: ID
  globalQuote: String
  searchSymbol: String
}
 